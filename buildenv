# bump: libpipeline-version /LIBPIPELINE_VERSION="(.*)"/ https://download.savannah.nongnu.org/releases/libpipeline/|re:/libpipeline-([\d.]+).tar.gz/$1/|semver:*
LIBPIPELINE_VERSION="1.5.8"

export ZOPEN_BUILD_LINE="STABLE"
export ZOPEN_STABLE_URL="https://download.savannah.nongnu.org/releases/libpipeline/libpipeline-${LIBPIPELINE_VERSION}.tar.gz"
export ZOPEN_STABLE_DEPS="git make curl zoslib"
export ZOPEN_BOOTSTRAP="skip"

export ZOPEN_CHECK="../tests/chkpipe.sh"

zopen_append_to_env()
{
cat <<ZZ
if [ ! -z "\$ZOPEN_IN_ZOPEN_BUILD" ]; then
  export ZOPEN_EXTRA_CFLAGS="\${ZOPEN_EXTRA_CFLAGS} -I\$PWD/include"
  export ZOPEN_EXTRA_CXXFLAGS="\${ZOPEN_EXTRA_CXXFLAGS} -I\$PWD/include"
  export ZOPEN_EXTRA_LDFLAGS="\${ZOPEN_EXTRA_LDFLAGS} -L\$PWD/lib"
  export ZOPEN_EXTRA_LIBS="\${ZOPEN_EXTRA_LIBS} -lpipeline"
fi
ZZ
}

zopen_check_results()
{
chk="$1/$2_check.log"

successes=$(grep -E "ok$" ${chk} | wc -l)
failures=$(grep -E "Failed$" ${chk} | wc -l)
totalTests="$((successes+failures))"

# hardcode 1 because the tool is not happy with 0
totalTests=1

cat <<ZZ
  actualFailures:$failures
  totalTests:$totalTests
  expectedFailures:0
ZZ

}

zopen_post_install()
{
   cd "$1/lib" && ar -d libpipeline.a libgnu_la-reallocarray.o
}

zopen_get_version()
{
  echo ${LIBPIPELINE_VERSION}
}
